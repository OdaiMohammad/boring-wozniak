# number of places to buy alcohol in a city

PREFIX osmo: <http://www.dei.unipd.it/database2/cutomOSMOntology#>
Select ?cityName ?roadName (count(?bars) as ?numberOfBars) where
{
	?bars a osmo:Amenity;
		osmo:isOnRoad ?road;
		osmo:isInCity ?city;
		osmo:hasUse ?use.
	?city a osmo:City;
		osmo:hasName ?cityName.
	?road a osmo:Road;
		osmo:hasName ?roadName.
	filter(?use IN ("bar","nightclub","restaurant","cafe;restaurant","internet_caffe","cafe", "pub","stripclub"))
}
group by ?cityName ?roadName
order by desc(?numberOfBars)

#shos names and number of each of them 

prefix osmo: <http://www.dei.unipd.it/database2/cutomOSMOntology#> 
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

select ?shopName (count(?shop) as ?shopsInVeneto) 
where { 
    ?shop osmo:hasUse "supermarket"^^xsd:string ;

          osmo:hasName ?shopName ;
          osmo:isInCity ?city  .
    ?city osmo:hasName ?cityName .
} 
group BY ?shopName
order by desc(?shopInVeneto)

#return of 20 buildings and their info

prefix osmo: <http://www.dei.unipd.it/database2/cutomOSMOntology#> 
prefix xsd: <http://www.w3.org/2001/XMLSchema#> 

select ?buildingName ?fulladress 
where{
 ?building    osmo:hasStreetName ?StreetName;             
              osmo:hasStreetName ?StreetName ;
              osmo:hasName ?buildingName ;
              osmo:hasCivilNumber ?houseNumber .
    bind(concat(?StreetName, ", ", ?houseNumber) as ?fulladress) .            
    }
order by desc(?buildingName) 
limit 20

# return the full list of shop types order by their quantity

prefix osmo: <http://www.dei.unipd.it/database2/cutomOSMOntology#> 
prefix xsd: <http://www.w3.org/2001/XMLSchema#> 

select ?type (count(?shop) as ?shopTypeCount) 
where { 
  ?shop a osmo:Shop ;
       osmo:hasUse ?type .
}  
group BY ?type
order by desc(?shopTypeCount) 

PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

# Get cities ordered from most to least fun

SELECT ?name (count(?building) as ?funCount) WHERE
{
    ?city a osmo:City ;
    	 osmo:hasName ?name.
  	?building osmo:hasUse ?use;
            osmo:isInCity ?city

     FILTER(?use IN ("bar", "cafe", "restaurant", "pub", "nightclub"))
}
group BY ?name
order by desc(?funCount)

# Are there cities that don't have universities?

ASK WHERE
{
    ?city a osmo:City ;
          osmo:hasName ?name .
    FILTER NOT EXISTS{?building osmo:hasUse "university";
            osmo:isInCity ?city}
}

# Get streets of Padova ordered from having the most to the least shops

SELECT ?name (count(?shop) as ?shopsCount) WHERE
{
    ?city a osmo:City ;
    	 osmo:hasName "Padova".
    ?road a osmo:Road;
          osmo:isInCity ?city ;
          osmo:hasName ?name .
    ?shop a osmo:Shop ;
    		osmo:isOnRoad ?road
}
group by ?name

# Get cities ordered from most to least covered by bus transport

SELECT ?name ((xsd:float(?busRoadCount)/xsd:float(?roadCount))*100 AS ?result) WHERE {
    {
        SELECT ?name (count(?busRoad) as ?busRoadCount) WHERE {
            ?city a osmo:City ;
                osmo:hasName ?name .
            ?busRoad a osmo:Road ;
                osmo:isInCity ?city ;
                osmo:isBusRoad True .
        }
        GROUP BY ?name
    }
    {
        SELECT ?name (count(?road) as ?roadCount) WHERE {
            ?city a osmo:City ;
                osmo:hasName ?name .
            ?road a osmo:Road ;
                osmo:isInCity ?city .
        }
        GROUP BY ?name
    }
}
ORDER BY DESC (?result)

# Get building infos located in a plaza/road (website, civil number, phone number..)

SELECT DISTINCT ?name ?website ?housenumber ?phone ?opening_hours WHERE
{
    ?road osmo:hasName "Via Umberto I"^^xsd:string. 
    ?building osmo:hasName ?name;
              osmo:hasWebsite ?website;
              osmo:hasCivilNumber ?addr:housenumber;
              osmo:hasPhone ?phone;
              osmo:hasEmail ?email;
              osmo:hasOpeningHours ?opening_hours;
}

#Shops open 24/7 near Padova/Venezia

PREFIX osmo: <http://www.dei.unipd.it/database2/cutomOSMOntology#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
select ?name ?type ?cityName ?roadName ?civicNumber where
{
	?amenity a osmo:Amenity;
		osmo:hasName ?name;
		osmo:hasOpeningHours "24/7"^^xsd:string;
		osmo:hasLatitude ?latitude;
		osmo:hasLongitude ?longitude;
		osmo:isInCity ?city;
		osmo:isOnRoad ?road.
	?city a osmo:City;
		osmo:hasName ?cityName.
	?road a osmo:Road;
		osmo:hasName ?roadName.
    optional {?amenity osmo:hasCivilNumber ?civicNumber;
                       osmo:hasUse ?type}. 
	filter (?latitude - "45.1223"^^xsd:decimal < 0.5 && ?longitude - "12.1012"^^xsd:decimal < 0.5)
}
Order by ?cityName
